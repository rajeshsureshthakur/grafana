import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;

public class GrafanaAuthTest {
    private static final String GRAFANA_URL = "http://localhost:3000"; // Change this to your Grafana URL
    private static final String API_TOKEN = "your-api-token-here"; // Replace with your API token

    public static void main(String[] args) {
        try {
            // Create HTTP Client
            HttpClient client = HttpClient.newHttpClient();

            // Create HTTP Request with Bearer token
            HttpRequest request = HttpRequest.newBuilder()
                .uri(URI.create(GRAFANA_URL + "/api/dashboards/home"))
                .header("Authorization", "Bearer " + API_TOKEN)
                .header("Accept", "application/json")
                .GET()
                .build();

            // Send request and get response
            HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

            // Print response details
            System.out.println("Status Code: " + response.statusCode());
            System.out.println("Response Body: " + response.body());

            // Check if authentication was successful
            if (response.statusCode() == 200) {
                System.out.println("Authentication successful!");
            } else {
                System.out.println("Authentication failed. Please check your API token and Grafana URL.");
            }

        } catch (Exception e) {
            System.err.println("Error occurred: " + e.getMessage());
            e.printStackTrace();
        }
    }

    // Helper method to test other Grafana API endpoints
    private static void testEndpoint(HttpClient client, String endpoint) throws Exception {
        HttpRequest request = HttpRequest.newBuilder()
            .uri(URI.create(GRAFANA_URL + endpoint))
            .header("Authorization", "Bearer " + API_TOKEN)
            .header("Accept", "application/json")
            .GET()
            .build();

        HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());
        System.out.println("\nTesting endpoint: " + endpoint);
        System.out.println("Status Code: " + response.statusCode());
        System.out.println("Response Body: " + response.body());
    }
}
